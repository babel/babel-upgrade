// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`adds flow preset if hasFlow option passed 1`] = `
Object {
  "presets": Array [
    "@babel/preset-react",
    "@babel/preset-flow",
  ],
}
`;

exports[`convert comma separated presets/plugins into an array 1`] = `
Object {
  "env": Object {
    "development": Object {
      "plugins": Array [
        "babel-plugin-istanbul",
        "@babel/plugin-transform-react-jsx-source",
        "@babel/plugin-transform-react-inline-elements",
      ],
    },
  },
  "plugins": Array [
    "@babel/plugin-proposal-function-bind",
    "@babel/plugin-proposal-class-properties",
  ],
  "presets": Array [
    "@babel/preset-env",
    "@babel/preset-react",
  ],
}
`;

exports[`does not add another flow preset if already present and hasFlow option passed 1`] = `
Object {
  "presets": Array [
    "@babel/preset-react",
    "@babel/preset-flow",
  ],
}
`;

exports[`does not add another flow preset if already present in an array and hasFlow option passed 1`] = `
Object {
  "presets": Array [
    "@babel/preset-react",
    Array [
      "@babel/preset-flow",
    ],
  ],
}
`;

exports[`does not add flow preset if hasFlow option is not passed 1`] = `
Object {
  "presets": Array [
    "@babel/preset-react",
  ],
}
`;

exports[`handles @babel prefix in plugins 1`] = `
Object {
  "plugins": Array [
    "@babel/plugin-proposal-async-generator-functions",
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-decorators",
  ],
}
`;

exports[`package that is removed 1`] = `
Object {
  "plugins": Array [
    "@babel/plugin-proposal-function-bind",
    "@babel/plugin-transform-spread",
    "instanbul",
  ],
}
`;

exports[`packages (json5) 1`] = `
Object {
  "env": Object {
    "development": Object {
      "plugins": Array [
        "babel-plugin-istanbul",
        "@babel/plugin-transform-react-jsx-source",
        "@babel/plugin-transform-react-jsx-self",
      ],
    },
    "production": Object {
      "plugins": Array [
        "@babel/plugin-transform-react-constant-elements",
        "@babel/plugin-transform-react-inline-elements",
      ],
    },
  },
  "plugins": Array [
    "@babel/plugin-proposal-function-bind",
    Array [
      "@babel/plugin-proposal-object-rest-spread",
      Object {
        "useBuiltIns": true,
      },
    ],
    "@babel/plugin-proposal-class-properties",
  ],
  "presets": Array [
    "@babel/preset-env",
    Array [
      "@babel/preset-env",
      Object {
        "modules": false,
      },
    ],
    "@babel/preset-react",
  ],
}
`;

exports[`packages 1`] = `
Object {
  "env": Object {
    "development": Object {
      "plugins": Array [
        "babel-plugin-istanbul",
        "@babel/plugin-transform-react-jsx-source",
        "@babel/plugin-transform-react-jsx-self",
      ],
    },
    "production": Object {
      "plugins": Array [
        "@babel/plugin-transform-react-constant-elements",
        "@babel/plugin-transform-react-inline-elements",
      ],
    },
  },
  "plugins": Array [
    "@babel/plugin-proposal-function-bind",
    Array [
      "@babel/plugin-proposal-object-rest-spread",
      Object {
        "useBuiltIns": true,
      },
    ],
    "@babel/plugin-proposal-class-properties",
  ],
  "presets": Array [
    "@babel/preset-env",
    Array [
      "@babel/preset-env",
      Object {
        "modules": false,
      },
    ],
    "@babel/preset-react",
  ],
}
`;

exports[`rename community packages 1`] = `
Object {
  "env": Object {
    "development": Object {
      "plugins": Array [
        "lodash",
      ],
    },
  },
  "plugins": Array [
    "lodash",
  ],
}
`;
